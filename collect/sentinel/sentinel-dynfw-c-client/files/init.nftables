#!/bin/sh /etc/rc.common

USE_PROCD=1
START=25
STOP=80

CERT_KEY="/etc/sentinel_dynfw_server.pub"
TABLE="turris-sentinel"
SET="dynfw"
CHAIN="dynfw"

setup_firewall() {
    nft list table "$TABLE" 2> /dev/null | grep -q " $TABLE" || nft create table inet "$TABLE"
    nft delete set inet "$TABLE" "$SET"_4 2> /dev/null
    nft delete set inet "$TABLE" "$SET"_6 2> /dev/null
    nft add set inet "$TABLE" "$SET"_4 '{ type ipv4_addr; comment "IPv4 addresses blocked by Turris Sentinel" ; }'
    nft add set inet "$TABLE" "$SET"_6 '{ type ipv6_addr; flags interval; comment "IPv6 addresses blocked by Turris Sentinel" ; }'
    nft delete chain "$TABLE" "$CHAIN"-"$TABLE"_input 2> /dev/null
    nft create chain inet "$TABLE" "$CHAIN"-"$TABLE"_input '{ type filter hook input priority -5; }'
    nft add rule inet "$TABLE" "$CHAIN"-"$TABLE"_input ct state established accept
    nft add rule inet "$TABLE" "$CHAIN"-"$TABLE"_input ip saddr @dynfw_4 drop
    nft add rule inet "$TABLE" "$CHAIN"-"$TABLE"_input ip6 saddr @dynfw_6 drop
    nft delete chain "$TABLE" "$CHAIN"-"$TABLE"_forward 2> /dev/null
    nft create chain inet "$TABLE" "$CHAIN"-"$TABLE"_forward '{ type filter hook input priority -5; }'
    nft add rule inet "$TABLE" "$CHAIN"-"$TABLE"_forward ct state established accept
    nft add rule inet "$TABLE" "$CHAIN"-"$TABLE"_forward ip saddr @dynfw_4 drop
    nft add rule inet "$TABLE" "$CHAIN"-"$TABLE"_forward ip6 saddr @dynfw_6 drop
}

teardown_firewall() {
    nft delete chain inet "$TABLE" "$CHAIN"-"$TABLE"_input 2> /dev/null
    nft delete chain inet "$TABLE" "$CHAIN"-"$TABLE"_forward 2> /dev/null
}

start_service() {
    setup_firewall
    procd_open_instance
    procd_set_param command dynfw-nfset-client
    procd_append_param command --table "$TABLE"
    procd_append_param command --set "$SET"
    procd_append_param command --cert "$CERT_KEY"
    # If not started, try ten times while waiting for 5 secs between tries
    procd_set_param respawn 600 5 10
    procd_close_instance
}

stop_service() {
    teardown_firewall
}
